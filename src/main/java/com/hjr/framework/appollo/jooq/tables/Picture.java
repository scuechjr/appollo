/*
 * This file is generated by jOOQ.
*/
package com.hjr.framework.appollo.jooq.tables;


import com.hjr.framework.appollo.jooq.Indexes;
import com.hjr.framework.appollo.jooq.Keys;
import com.hjr.framework.appollo.jooq.Public;
import com.hjr.framework.appollo.jooq.tables.records.PictureRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Picture extends TableImpl<PictureRecord> {

    private static final long serialVersionUID = -13362614;

    /**
     * The reference instance of <code>PUBLIC.PICTURE</code>
     */
    public static final Picture PICTURE = new Picture();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PictureRecord> getRecordType() {
        return PictureRecord.class;
    }

    /**
     * The column <code>PUBLIC.PICTURE.ID</code>.
     */
    public final TableField<PictureRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.PICTURE.SRC_SITE</code>.
     */
    public final TableField<PictureRecord, String> SRC_SITE = createField("SRC_SITE", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>PUBLIC.PICTURE.SRC_URL</code>.
     */
    public final TableField<PictureRecord, String> SRC_URL = createField("SRC_URL", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>PUBLIC.PICTURE.URL</code>.
     */
    public final TableField<PictureRecord, String> URL = createField("URL", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>PUBLIC.PICTURE.NAME</code>.
     */
    public final TableField<PictureRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>PUBLIC.PICTURE.SAVE_PATH</code>.
     */
    public final TableField<PictureRecord, String> SAVE_PATH = createField("SAVE_PATH", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>PUBLIC.PICTURE.YN</code>.
     */
    public final TableField<PictureRecord, Byte> YN = createField("YN", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>PUBLIC.PICTURE.CREATE_TIME</code>.
     */
    public final TableField<PictureRecord, LocalDate> CREATE_TIME = createField("CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>PUBLIC.PICTURE.MODIFY_TIME</code>.
     */
    public final TableField<PictureRecord, LocalDate> MODIFY_TIME = createField("MODIFY_TIME", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>PUBLIC.PICTURE.TAG</code>.
     */
    public final TableField<PictureRecord, String> TAG = createField("TAG", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>PUBLIC.PICTURE.TYPE</code>.
     */
    public final TableField<PictureRecord, String> TYPE = createField("TYPE", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>PUBLIC.PICTURE.DESC</code>.
     */
    public final TableField<PictureRecord, String> DESC = createField("DESC", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>PUBLIC.PICTURE.SHARE_NUM</code>.
     */
    public final TableField<PictureRecord, Integer> SHARE_NUM = createField("SHARE_NUM", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.PICTURE.VIEW_NUM</code>.
     */
    public final TableField<PictureRecord, Integer> VIEW_NUM = createField("VIEW_NUM", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.PICTURE.LIKE_NUM</code>.
     */
    public final TableField<PictureRecord, Integer> LIKE_NUM = createField("LIKE_NUM", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.PICTURE.SAVE_NUM</code>.
     */
    public final TableField<PictureRecord, Integer> SAVE_NUM = createField("SAVE_NUM", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>PUBLIC.PICTURE</code> table reference
     */
    public Picture() {
        this(DSL.name("PICTURE"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.PICTURE</code> table reference
     */
    public Picture(String alias) {
        this(DSL.name(alias), PICTURE);
    }

    /**
     * Create an aliased <code>PUBLIC.PICTURE</code> table reference
     */
    public Picture(Name alias) {
        this(alias, PICTURE);
    }

    private Picture(Name alias, Table<PictureRecord> aliased) {
        this(alias, aliased, null);
    }

    private Picture(Name alias, Table<PictureRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_8);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PictureRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_8;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PictureRecord>> getKeys() {
        return Arrays.<UniqueKey<PictureRecord>>asList(Keys.CONSTRAINT_8);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Picture as(String alias) {
        return new Picture(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Picture as(Name alias) {
        return new Picture(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Picture rename(String name) {
        return new Picture(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Picture rename(Name name) {
        return new Picture(name, null);
    }
}
